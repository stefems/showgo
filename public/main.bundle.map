{"version":3,"sources":["webpack:///./src/app/auth.service.ts","webpack:///./src/app/api.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/event.ts","webpack:///./src/app/events/events.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/posts/posts.component.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/events/events.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/posts/posts.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/events/events.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/posts/posts.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Subject }    from 'rxjs/Subject';\r\nimport {User} from './user';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  private statusObservableSource = new Subject<boolean>(); \r\n  statusObservable = this.statusObservableSource.asObservable();\r\n  private userObservableSource = new Subject<User>(); \r\n  userObservable = this.userObservableSource.asObservable();\r\n  isLoggedIn: boolean = false;\r\n  private checkLoginUrl = \"http://45.55.156.114:3000/loginCheck\";\r\n  private getUserUrl = \"http://45.55.156.114:3000/getUser\";\r\n\r\n  // store the URL so we can redirect after logging in\r\n  redirectUrl: string;\r\n\r\n  constructor (private http: Http) {}\r\n\r\n  // login(): Promise<boolean> {\r\n  //   return this.http.get(this.checkLoginUrl)\r\n  //     .toPromise()\r\n  //     .then(response => response.json().status)\r\n  //     .catch(err => console.log(err));\r\n  // }\r\n  login(): Observable<boolean> {\r\n    return this.http.get(this.checkLoginUrl)\r\n      .map((res:Response) => res.json().status);\r\n  }\r\n  getUser(): Observable<User> {\r\n    return this.http.get(this.getUserUrl)\r\n      .map((res:Response) => new User(res.json()));\r\n  }\r\n\r\n  logout(): void {\r\n    this.isLoggedIn = false;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Subject }    from 'rxjs/Subject';\r\nimport {User} from './user';\r\nimport {Event} from './event';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n  private eventsObservableSource = new Subject<Event[]>(); \r\n  eventsObservable = this.eventsObservableSource.asObservable();\r\n  private getEventsUrl = \"http://45.55.156.114:3000/api/events\";\r\n\r\n  // store the URL so we can redirect after logging in\r\n  redirectUrl: string;\r\n\r\n  constructor (private http: Http) {}\r\n\r\n  // login(): Promise<boolean> {\r\n  //   return this.http.get(this.checkLoginUrl)\r\n  //     .toPromise()\r\n  //     .then(response => response.json().status)\r\n  //     .catch(err => console.log(err));\r\n  // }\r\n  getEvents(): Observable<Event[]> {\r\n    return this.http.get(this.getEventsUrl)\r\n      .map((res:Response) => {\r\n        let eventArray = [];\r\n        for (let i = 0; i < res.json().length; i++) {\r\n          let newEvent = new Event(res.json()[i]);\r\n          eventArray.push(newEvent);\r\n        }\r\n        res.json()\r\n        return eventArray;\r\n      });\r\n  \r\n  }\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/api.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 392;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 392\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { AuthService }      from './auth.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport {User} from './user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'showgo';\n  loginStatus: boolean = false;\n  subscription = Subscription;\n  loginStatusObservable: boolean = false;\n  user: any;\n  welcomeMessage = \"Please log in!\";\n\n  constructor(private authService: AuthService) {\n  \tauthService.login().subscribe(response => { \n      this.loginStatus = response; \n      if (this.loginStatus) {\n        authService.getUser().subscribe(response => {\n          console.log(response);\n          this.user = response;\n          this.welcomeMessage = \"Hi, \" + this.user.displayName;\n        });\n      }\n    });\n    \n  }\n  \n  ngOnInit(){\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, CanActivate } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { EventsComponent } from './events/events.component';\nimport { AuthGuard }                from './auth-guard.service';\nimport { AuthService }      from './auth.service';\nimport { ApiService }      from './api.service';\n\n\n\n\n// Define the routes\nconst ROUTES = [\n  {\n    path: '',\n    redirectTo: 'events',\n    pathMatch: \"full\"\n  },\n  {\n    path: 'events',\n    component: EventsComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PostsComponent,\n    EventsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(ROUTES) // Add routes to the app\n  ],\n  providers: [AuthGuard, AuthService, ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable }       from '@angular/core';\r\nimport {\r\n  CanActivate, Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n}                           from '@angular/router';\r\nimport { AuthService }      from './auth.service';\r\nimport {Observable} from 'rxjs/Rx';\r\n// Import RxJs required methods\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  loginStatus: boolean = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.authService.login().map(response => { \r\n      if (response) {\r\n        return true;\r\n      } \r\n      else {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth-guard.service.ts","export class Event {\r\n\tprivate name: string;\r\n\tprivate fbId: string;\r\n\tprivate dbId: string; \r\n\t//TODO: add this shit, yo\r\n\tconstructor(inputJson: any) {\r\n\t\tthis.name = inputJson.eventName;\r\n\t\t//use the id to get from DB to populate other data\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/event.ts","import { Component, OnInit } from '@angular/core';\nimport { ApiService }      from './../api.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  private events = [];\n\n  constructor(private apiService: ApiService) {\n  \t//hit the backend path (via an observer) to get the events from mongo\n  \tapiService.getEvents().subscribe(response => { \n      this.events = response; \n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/events/events.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/posts/posts.component.ts","export class User {\n\tprivate venues = [];\n\tprivate displayName = \"\";\n  \tprivate oauthID: \"\";\n\n\tconstructor(inputJson: any) {\n\t\tthis.oauthID = inputJson.oauthID;\n\t\tthis.displayName = inputJson.name;\n\t\t//use the id to get from DB to populate other data\n\t}\n\n\tcreateUser(dbId) {\n\t\tconsole.log(dbId);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 672\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/events/events.component.css\n// module id = 673\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 674\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/posts/posts.component.css\n// module id = 675\n// module chunks = 1","module.exports = \"<h1>\\n\\t{{title}}\\n</h1>\\n<h2>\\n\\t{{welcomeMessage}}\\n</h2>\\n<h3>\\n\\t<a href=\\\"/logout\\\">Log out</a>\\n</h3>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 676\n// module chunks = 1","module.exports = \"<h1>Events</h1>\\n<ul *ngFor=\\\"let event of events\\\">\\n\\t<li>{{event.name}}</li>\\n\\t<!--event [event]=\\\"event\\\"></event-->\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/events/events.component.html\n// module id = 677\n// module chunks = 1","module.exports = \"<p>\\n  Login:\\n</p>\\n <a href=\\\"/auth/facebook\\\">Sign in with Facebook</a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 678\n// module chunks = 1","module.exports = \"<p>\\n  posts works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/posts/posts.component.html\n// module id = 679\n// module chunks = 1"],"sourceRoot":""}